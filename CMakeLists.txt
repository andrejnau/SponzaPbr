cmake_minimum_required (VERSION 3.2.2)

set (PROJECT FlyCube)
project (${PROJECT})

set(project_root ${CMAKE_CURRENT_SOURCE_DIR})
if (CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
    set(CMAKE_INSTALL_PREFIX "${project_root}/install" CACHE PATH "install path" FORCE)
endif()
set_property(GLOBAL PROPERTY USE_FOLDERS ON)
set_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "CMakeTargets")
set(CMAKE_INCLUDE_CURRENT_DIR ON)
option(BUILD_SHARED_LIBS "Build package with shared libraries." OFF)
list(APPEND CMAKE_MODULE_PATH "${project_root}/cmake")
list(APPEND CMAKE_MODULE_PATH "${project_root}/3rdparty/dxc/cmake/modules")
include(compiler_settings)

set(assets_path ${CMAKE_CURRENT_SOURCE_DIR}/assets/)
set(sdkbin_path "C:/Program Files (x86)/Windows Kits/10/Bin/${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}")
add_definitions(-DASSETS_PATH="${assets_path}")
add_definitions(-DSDKBIN="${sdkbin_path}")

set(VULKAN_SUPPORT ON)
if (WIN32)
    set(DIRECTX_SUPPORT ON)
    set(RAYTRACING_SUPPORT ON)
endif()

include(3rdparty/glfw)
include(3rdparty/soil)
include(3rdparty/assimp)
include(3rdparty/glm)
include(3rdparty/gli)
include(3rdparty/mustache)
include(3rdparty/imgui)
include(3rdparty/spirv-cross)
include(3rdparty/d3dx12)
include(3rdparty/dxc)
include(3rdparty/catch2)

if (VULKAN_SUPPORT)
    include(3rdparty/vulkan)
    add_definitions(-DVULKAN_SUPPORT)
    add_definitions(-DVK_NO_PROTOTYPES)
    add_definitions(-DVULKAN_HPP_DISPATCH_LOADER_DYNAMIC=1)
    if (WIN32)
        add_definitions(-DVK_USE_PLATFORM_WIN32_KHR)
    else()
        add_definitions(-DVK_USE_PLATFORM_XCB_KHR)
    endif()
endif()
if (DIRECTX_SUPPORT)
    add_definitions(-DDIRECTX_SUPPORT)
endif()
if (RAYTRACING_SUPPORT)
    add_definitions(-DRAYTRACING_SUPPORT)
endif()

add_subdirectory(src)
